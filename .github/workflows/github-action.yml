# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle
#

name: Java CI with Gradle

on:
  push:
    branches: 
    - main
    - release

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        
    ## 1-1 application.properties 파일 생성
    - name: make application.properties
      run: |
        cd ./src/main/resources
        touch ./application.properties
        echo "${{ secrets.PROPERTIES }}" > ./application.properties
      shell: bash
      
    ## 1-2 application-aws.yml 파일 생성
    - name: make application-aws.yml
      run: |
        cd ./src/main/resources
        touch ./application-aws.yml
        echo "${{ secrets.AWS_PROPERTIES }}" > ./application-aws.yml
      shell: bash
      
    ## 1-3 application-oauth.properties 파일 생성
    - name: application-oauth.properties 
      run: |
        cd ./src/main/resources
        touch ./application-oauth.properties
        echo "${{ secrets.OAUTH_PROPERTIES }}" > ./application-oauth.properties
      shell: bash
      
    ## 2 스프링 프로젝트 jar 파일 빌드
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
      
    ## 3 Docker Hub에 이미지 push
    - name: Docker build
      run: |
       docker login -u ${{ secrets.USERNAME }} -p ${{ secrets.PASSWORD }}
       docker build -t test .
       docker tag test qwe382/tikkeeul:${GITHUB_SHA::7}
       docker push qwe382/tikkeeul:${GITHUB_SHA::7}
       
     ## 4 이미지를 서버에서 run
    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ec2-3-37-61-13.ap-northeast-2.compute.amazonaws.com
        username: ubuntu
        key: ${{ secrets.PRIVATE_KEY }}
        envs: GITHUB_SHA
        script: |
          docker pull qwe382/tikkeeul:${GITHUB_SHA::7}
          docker tag qwe382/tikkeeul:${GITHUB_SHA::7} tikkeeul
          docker stop server
          docker container run --name webserver -d -p 8080:80 nginx
          docker run -d --rm --name server -p 80:8080 tikkeeul

  cd-pipeline:
      needs: build-image
      name: continuous deploy
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@master
        - name: copy file via ssh password
          uses: appleboy/scp-action@master
          with:
            host: ec2-3-37-61-13.ap-northeast-2.compute.amazonaws.com
            username: ubuntu
            key: ${{ secrets.PRIVATE_KEY }}
            port: 22
            source: "docker-compose.yml"
            target: "/home/ubuntu/"
        - name: executing remote ssh commands using password
          uses: appleboy/ssh-action@master
          with:
            host: ec2-3-37-61-13.ap-northeast-2.compute.amazonaws.com
            username: ubuntu
            key: ${{ secrets.PRIVATE_KEY }}
            port: 22
            script: "docker-compose pull && docker-compose up -d"
#
#    - name: executing remote ssh commands using password
#      uses: appleboy/ssh-action@master
#      with:
#        host: ec2-3-37-61-13.ap-northeast-2.compute.amazonaws.com
#        username: ubuntu
#        key: ${{ secrets.PRIVATE_KEY }}
#        script: "docker-compose pull && docker-compose up -d"
